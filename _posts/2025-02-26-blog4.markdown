---
layout: content-layout
title: "지킬(JERKLL) 프레임워크 구조 파악하기! 🤠"
date: 2025-02-26
categories: [dev]
tags: [Jekyll, Web, Blogging, Github]
---

## GTIHUB 블로그 만들기 목차

> 1: [GITHUB 블로그 도전! 😓 마크다운 작성법부터 확인하기 🥳](/dev/2025/02/23/blog1.html)

> 2: [GITHUB 블로그 개설 어떻게 했더라... 🤨 껍데기 만들기편](/dev/2025/02/24/blog2.html)

> 3: [GITHUB 블로그에 지킬(JERKLL) 프레임워크 얹어보기! 🥸](/dev/2025/02/25/blog3.html)

> 4: [지킬(JERKLL) 프레임워크 구조 파악하기! 🤠](/dev/2025/02/26/blog4.html)

---

## 안녕하십니까!! 🧐

지난번에 Jerkll이라는 프레임워크를 사용하여 블로그를 구동시켜 보았습니다!

다만... Jerkll 프레임워크... 아직 뭐가 뭔지 모르겠네요... 😨

그래서 Jerkll 프레임워크 구조 파악 시간을 가졌습니다!

한 번 같이 보시죠! 😓

---

### 1. 기본 구조

지킬 프레임워크의 기본 구조는 대략적으로 아래와 같습니다!

```
/my-jekyll-site
├── _config.yml        # 사이트 전역 설정 파일
├── _posts/           # 블로그 게시글 저장 폴더
├── _drafts/          # 게시글 임시 저장 폴더
├── _layouts/         # 페이지의 기본 레이아웃 파일
├── _includes/        # 공통 HTML 조각 파일 (헤더, 푸터 등)
├── _data/            # YAML/JSON 데이터 파일
├── _sass/            # Sass 스타일시트 파일
├── assets/           # 정적 리소스 (CSS, JS, 이미지 등)
├── _site/            # 최종 빌드된 정적 파일 (자동 생성됨)
├── index.md          # 사이트 메인 페이지 (Markdown)
├── about.md          # 예제 페이지 (Markdown)
└── Gemfile           # Jekyll 플러그인 및 종속성 관리 파일
```

와우... 뭔가 다양한 구성들로 되어 있네요...

하나씩 위에서부터 뜯어봅시다...

### 2. _config.yml

이 파일에는 사이트의 전역 설정을 하는 파일입니다.

테마나 도메인 등 블로그의 기본 설정 등을 담을 수 있습니다.

일종의 Setting 파일로 보면 되겠네요.

생각지도 못한 다양한 설정들을 변경할 수 있기 때문에 이런 것도 변경 가능한지는 GPT님이 잘 알려줄 것 같습니다... 😶‍🌫️

### 3. _posts/

이 폴더에는 본격적으로 글을 쓰는 markdown 파일들을 담아내는 공간입니다.

중요한 것은 파일명의 패턴인데요!

`YYYY-MM-DD-title.md` 이 구조로 파일명을 작성해야 합니다!

두 번째로 알아두어야 할 것은 markdown 파일 작성법인데요!

아마 markdown에 대한 기본적인 문법은 1번 포스트에 담았습니다!

다만 블로그에서 확인이 필요한 기본 정보를 써야하는 부분이 필요합니다!

아래 예시를 보시면 아실 겁니다!

```
---
layout: post
title: "내 첫 번째 포스트"
date: 2025-02-26
categories: 개발 블로그
tags: [Jekyll, 블로그]
---

Jekyll을 이용한 첫 번째 블로그 포스트입니다. 🚀
```

위처럼 파일 내에 layout부터 tags 등 마크다운 파일에 대한 기본 정보를 작성해야 합니다.

<span style="color: red;">⚠ 반드시 첫 번째 줄부터 써야 기본 정보가 인식됩니다. 두 번째 줄부터 쓰면 인식이 안돼요!</span>

### 4. _layouts/

마크다운 파일을 작성할 때 기본 정보에 layout 이라는 정보를 보셨을겁니다!

거기에 사용되는 html을 이 폴더에 관리하시면 됩니다!

여기서 중요한 특징은 페이지의 기본 골격을 설정할 수 있고 JSTL 처럼 **동적으로 바인딩**을 할 수 있습니다!

아래 예시를 보시면 더 이해가 되실 겁니다!

```
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>\{\{ page.title \}\}</title>
    <link rel="stylesheet" href="/assets/style.css">
</head>
<body>
    <header>
        <h1>\{\{ site.title \}\}</h1>
    </header>
    
    <main>
        \{\{ content \}\}
    </main>
    
    <footer>
        <p>© 2025 \{\{ site.title \}\}</p>
    </footer>
</body>
</html>
```

본문 안에 보면 이렇게 `{ {중괄호} }`로 감싸있는 부분이 보이실 겁니다!

content 영역이 마크다운을 작성한 글이 노출되는 부분입니다.

그 외에 if문, for문 등도 사용할 수 있으니 궁금하신 분들은 추가로 찾아보심을 추천드립니다!

**📌 마크다운 파일 안에서도 `{ {내용} }` 바인딩이 되버리네요... 🤔**

### 5. _includes/

이 폴더는 예상을 하실 겁니다.

헤더나 푸터, 사이드바 같이 공통적으로 포함되는 부분을 빼는 부분입니다.

사용은 아래처럼 하시면 됩니다!

```
<body>
    \{\% include header.html \%\}
    <main>
    </main>
</body>
```

### 6. _data/

여기는 마치 DB 대용처럼 사이트에서 사용할 데이터를 관리하는 곳입니다!

사용은 아래처럼 하시면 됩니다!

```
<p>작성자: \{\{ site.data.authors.john_doe.name \}\}</p>
```

### 7. _sass/

여기는 Sass 파일을 저장하는 폴더입니다!

css는 들어봤어도 Sass는 조금 생소하실 수 있을 것 같네요!

### 8. _assets/

여기는 CSS 파일이나 JS 파일 등을 관리하심 됩니다!

### 9. _site/

<span style="color: red;">⛔ 여기는 직접 건드리는 곳이 아닙니다! ⛔</span>

Jekyll가 서버를 구동하면 마크다운을 조합한 html 파일을 생성하는 곳입니다.

**📌 GITHUB에 PUSH하지 않아도 되므로 주로 .gitignore에 등록합니다!**

### 10. index.md

이 파일은 블로그의 기본 페이지라고 보심 됩니다!

```
---
layout: default
title: "홈페이지"
---

# 환영합니다!
Jekyll을 이용한 정적 블로그입니다.
```

예시처럼 layouts에 있는 default.html을 호출하여 사용할 수 있습니다!

### 11. _drafts/

여기는 아직 작업중인 포스트 글을 모아놓은 곳입니다.

필수적은 공간은 아니니 필요하신 분들만 폴더 만들어서 사용하심 될 것 같네요!

---

일단 얼추 지킬 프레임워크의 구조를 살펴보았습니다.

아직도 배울 부분은 많은 것 같네요... 😭

블로그의 실력은 차차 키워나가도록 하고 추후에 더 좋은 정보가 있다면 공유드리겠습니다!

감사합니다!